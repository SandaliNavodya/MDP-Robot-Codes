const int trigPin = 10;
const int echoPin = 11;
const int trigPin1 = 8;
const int echoPin1 = 9;
const int trigPin2 = 6;
const int echoPin2 = 7;
// defines variables
float duration,duration1,duration2;
float distance,distance1,distance2;
int x=0;


void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
 pinMode(trigPin1, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin1, INPUT);
   pinMode(trigPin2, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin2, INPUT);
  pinMode (2,OUTPUT);
  pinMode (3,OUTPUT);
  pinMode (5,OUTPUT);
  pinMode (4,OUTPUT);
  Serial.begin(9600); // Starts the serial communication
}
void loop() {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2;
  // Prints the distance on the Serial Monitor
  Serial.print("\tDistance: ");
  Serial.print(distance);

 digitalWrite(trigPin1, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin1, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin1, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration1 = pulseIn(echoPin1, HIGH);
  // Calculating the distance
  distance1 = duration1 * 0.034 / 2;
  // Prints the distance on the Serial Monitor
  Serial.print("\tDistance1: ");
  Serial.print(distance1);
  

   digitalWrite(trigPin2, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin2, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin2, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration2 = pulseIn(echoPin2, HIGH);
  // Calculating the distance
  distance2 = duration2 * 0.034 / 2;
  // Prints the distance on the Serial Monitor
  Serial.print("\tDistance2:  ");
  Serial.println(distance2);



if (distance>10){
 forward();
 if(distance2<10)
 {left();
 delay(500);
 leftoff();}
  if(distance1<10)
 {right();
 delay(500);
 rightoff ();}
 }
 else
 {off();
 if(distance2>10)
 {left();
 delay(500);
 leftoff();}
  if(distance1>10)
 {right();
 delay(500);
 rightoff ();}
}

}
void forward(){
  
 digitalWrite(2,HIGH);
 digitalWrite(3,LOW);
digitalWrite(5,HIGH);
 digitalWrite(4,LOW);
 }
void off(){
  digitalWrite(2,LOW);
 digitalWrite(3,LOW);
digitalWrite(5,LOW);
 digitalWrite(4,LOW);
}
void left(){
   digitalWrite(2,HIGH);
 digitalWrite(3,LOW);
}
void leftoff(){
   digitalWrite(2,LOW);
 digitalWrite(3,LOW);
}
void right(){
   digitalWrite(5,HIGH);
 digitalWrite(4,LOW);
}
void rightoff(){
   digitalWrite(5,LOW);
 digitalWrite(4,LOW);
}
